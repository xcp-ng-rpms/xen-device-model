diff --git a/qemu-char.h b/qemu-char.h
index b30541a..fca9572 100644
--- a/qemu-char.h
+++ b/qemu-char.h
@@ -85,6 +85,12 @@ extern int term_escape_char;
 
 /* async I/O support */
 
+int qemu_set_fd_handler3(int fd,
+                         IOCanRWHandler *fd_read_poll,
+                         IOHandler *fd_read,
+                         IOHandler *fd_write,
+                         IOHandler *fd_exception,
+                         void *opaque);
 int qemu_set_fd_handler2(int fd,
                          IOCanRWHandler *fd_read_poll,
                          IOHandler *fd_read,
diff --git a/vl.c b/vl.c
index 13663f1..596837f 100644
--- a/vl.c
+++ b/vl.c
@@ -2482,6 +2482,7 @@ typedef struct IOHandlerRecord {
     IOCanRWHandler *fd_read_poll;
     IOHandler *fd_read;
     IOHandler *fd_write;
+    IOHandler *fd_exception;
     int deleted;
     void *opaque;
     /* temporary data */
@@ -2493,15 +2494,16 @@ static IOHandlerRecord *first_io_handler;
 
 /* XXX: fd_read_poll should be suppressed, but an API change is
    necessary in the character devices to suppress fd_can_read(). */
-int qemu_set_fd_handler2(int fd,
+int qemu_set_fd_handler3(int fd,
                          IOCanRWHandler *fd_read_poll,
                          IOHandler *fd_read,
                          IOHandler *fd_write,
+                         IOHandler *fd_exception,
                          void *opaque)
 {
     IOHandlerRecord **pioh, *ioh;
 
-    if (!fd_read && !fd_write) {
+    if (!fd_read && !fd_write && !fd_exception) {
         pioh = &first_io_handler;
         for(;;) {
             ioh = *pioh;
@@ -2526,12 +2528,21 @@ int qemu_set_fd_handler2(int fd,
         ioh->fd_read_poll = fd_read_poll;
         ioh->fd_read = fd_read;
         ioh->fd_write = fd_write;
+        ioh->fd_exception = fd_exception;
         ioh->opaque = opaque;
         ioh->deleted = 0;
     }
     return 0;
 }
 
+int qemu_set_fd_handler2(int fd,
+                        IOCanRWHandler *fd_read_poll,
+                        IOHandler *fd_read,
+                        IOHandler *fd_write,
+                        void *opaque)
+{
+    return qemu_set_fd_handler3(fd, fd_read_poll, fd_read, fd_write, NULL, opaque);
+}
 int qemu_set_fd_handler(int fd,
                         IOHandler *fd_read,
                         IOHandler *fd_write,
@@ -3355,6 +3366,11 @@ void main_loop_wait(int timeout)
             if (ioh->fd > nfds)
                 nfds = ioh->fd;
         }
+        if (ioh->fd_exception) {
+            FD_SET(ioh->fd, &xfds);
+            if (ioh->fd > nfds)
+                nfds = ioh->fd;
+        }
     }
 
     delta_us = qemu_next_deadline_dyntick();
@@ -3381,6 +3397,9 @@ void main_loop_wait(int timeout)
             if (!ioh->deleted && ioh->fd_write && FD_ISSET(ioh->fd, &wfds)) {
                 ioh->fd_write(ioh->opaque);
             }
+            if (!ioh->deleted && ioh->fd_exception && FD_ISSET(ioh->fd, &xfds)) {
+                ioh->fd_exception(ioh->opaque);
+            }
         }
 
 	/* remove deleted IO handlers */
